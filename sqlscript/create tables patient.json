{
	"name": "create tables patient",
	"properties": {
		"content": {
			"query": "IF NOT EXISTS (SELECT * FROM sys.external_file_formats WHERE name = 'SynapseParquetFormat') \n\tCREATE EXTERNAL FILE FORMAT [SynapseParquetFormat] \n\tWITH ( FORMAT_TYPE = PARQUET)\nGO\n\nIF NOT EXISTS (SELECT * FROM sys.external_data_sources WHERE name = 'silver_amheroldhackathonstorage_dfs_core_windows_net') \n\tCREATE EXTERNAL DATA SOURCE [silver_amheroldhackathonstorage_dfs_core_windows_net] \n\tWITH (\n\t\tLOCATION = 'abfss://silver@amheroldhackathonstorage.dfs.core.windows.net' \n\t)\nGO\n\nCREATE EXTERNAL TABLE ext.Patient_name (\n\t[Patient_id] nvarchar(4000),\n\t[name_family] nvarchar(4000),\n\t[name_given] nvarchar(4000),\n\t[name_prefix] nvarchar(4000),\n\t[name_suffix] nvarchar(4000),\n\t[name_use] nvarchar(4000)\n\t)\n\tWITH (\n\tLOCATION = 'Patient_name/**',\n\tDATA_SOURCE = [silver_amheroldhackathonstorage_dfs_core_windows_net],\n\tFILE_FORMAT = [SynapseParquetFormat]\n\t)\nGO\n\n\nSELECT TOP 100 * FROM ext.Patient_name\nGO\n\n\n\nIF NOT EXISTS (SELECT * FROM sys.external_file_formats WHERE name = 'SynapseParquetFormat') \n\tCREATE EXTERNAL FILE FORMAT [SynapseParquetFormat] \n\tWITH ( FORMAT_TYPE = PARQUET)\nGO\n\nIF NOT EXISTS (SELECT * FROM sys.external_data_sources WHERE name = 'silver_amheroldhackathonstorage_dfs_core_windows_net') \n\tCREATE EXTERNAL DATA SOURCE [silver_amheroldhackathonstorage_dfs_core_windows_net] \n\tWITH (\n\t\tLOCATION = 'abfss://silver@amheroldhackathonstorage.dfs.core.windows.net' \n\t)\nGO\n\nCREATE EXTERNAL TABLE ext.Patient_telecom (\n\t[Patient_id] nvarchar(4000),\n\t[telecom_system] nvarchar(4000),\n\t[telecom_use] nvarchar(4000),\n\t[telecom_value] nvarchar(4000)\n\t)\n\tWITH (\n\tLOCATION = 'Patient_telecom/**',\n\tDATA_SOURCE = [silver_amheroldhackathonstorage_dfs_core_windows_net],\n\tFILE_FORMAT = [SynapseParquetFormat]\n\t)\nGO\n\n\nSELECT TOP 100 * FROM ext.Patient_telecom\nGO\n\n\n\n\nIF NOT EXISTS (SELECT * FROM sys.external_file_formats WHERE name = 'SynapseParquetFormat') \n\tCREATE EXTERNAL FILE FORMAT [SynapseParquetFormat] \n\tWITH ( FORMAT_TYPE = PARQUET)\nGO\n\nIF NOT EXISTS (SELECT * FROM sys.external_data_sources WHERE name = 'silver_amheroldhackathonstorage_dfs_core_windows_net') \n\tCREATE EXTERNAL DATA SOURCE [silver_amheroldhackathonstorage_dfs_core_windows_net] \n\tWITH (\n\t\tLOCATION = 'abfss://silver@amheroldhackathonstorage.dfs.core.windows.net' \n\t)\nGO\n\nCREATE EXTERNAL TABLE ext.Patient_maritalStatus (\n\t[Patient_id] nvarchar(4000),\n\t[maritalStatus_coding_code] nvarchar(4000),\n\t[maritalStatus_coding_display] nvarchar(4000),\n\t[maritalStatus_coding_system] nvarchar(4000),\n\t[maritalStatus_text] nvarchar(4000)\n\t)\n\tWITH (\n\tLOCATION = 'Patient_maritalStatus/**',\n\tDATA_SOURCE = [silver_amheroldhackathonstorage_dfs_core_windows_net],\n\tFILE_FORMAT = [SynapseParquetFormat]\n\t)\nGO\n\n\nSELECT TOP 100 * FROM ext.Patient_maritalStatus\nGO\n\n\n\n\nIF NOT EXISTS (SELECT * FROM sys.external_file_formats WHERE name = 'SynapseParquetFormat') \n\tCREATE EXTERNAL FILE FORMAT [SynapseParquetFormat] \n\tWITH ( FORMAT_TYPE = PARQUET)\nGO\n\nIF NOT EXISTS (SELECT * FROM sys.external_data_sources WHERE name = 'silver_amheroldhackathonstorage_dfs_core_windows_net') \n\tCREATE EXTERNAL DATA SOURCE [silver_amheroldhackathonstorage_dfs_core_windows_net] \n\tWITH (\n\t\tLOCATION = 'abfss://silver@amheroldhackathonstorage.dfs.core.windows.net' \n\t)\nGO\n\nCREATE EXTERNAL TABLE ext.Patient_main (\n\t[birthDate] nvarchar(4000),\n\t[deceasedDateTime] nvarchar(4000),\n\t[gender] nvarchar(4000),\n\t[Patient_id] nvarchar(4000),\n\t[multipleBirthBoolean] bit,\n\t[multipleBirthInteger] bigint,\n\t[resourceType] nvarchar(4000),\n\t[text_div] nvarchar(4000),\n\t[text_status] nvarchar(4000)\n\t)\n\tWITH (\n\tLOCATION = 'Patient_main/**',\n\tDATA_SOURCE = [silver_amheroldhackathonstorage_dfs_core_windows_net],\n\tFILE_FORMAT = [SynapseParquetFormat]\n\t)\nGO\n\n\nSELECT TOP 100 * FROM ext.Patient_main\nGO\n\n\n\n\nIF NOT EXISTS (SELECT * FROM sys.external_file_formats WHERE name = 'SynapseParquetFormat') \n\tCREATE EXTERNAL FILE FORMAT [SynapseParquetFormat] \n\tWITH ( FORMAT_TYPE = PARQUET)\nGO\n\nIF NOT EXISTS (SELECT * FROM sys.external_data_sources WHERE name = 'silver_amheroldhackathonstorage_dfs_core_windows_net') \n\tCREATE EXTERNAL DATA SOURCE [silver_amheroldhackathonstorage_dfs_core_windows_net] \n\tWITH (\n\t\tLOCATION = 'abfss://silver@amheroldhackathonstorage.dfs.core.windows.net' \n\t)\nGO\n\nCREATE EXTERNAL TABLE ext.Patient_identifier (\n\t[Patient_id] nvarchar(4000),\n\t[identifier_system] nvarchar(4000),\n\t[identifier_type_coding_code] nvarchar(4000),\n\t[identifier_type_coding_display] nvarchar(4000),\n\t[identifier_type_coding_system] nvarchar(4000),\n\t[identifier_type_text] nvarchar(4000),\n\t[identifier_value] nvarchar(4000)\n\t)\n\tWITH (\n\tLOCATION = 'Patient_identifier/**',\n\tDATA_SOURCE = [silver_amheroldhackathonstorage_dfs_core_windows_net],\n\tFILE_FORMAT = [SynapseParquetFormat]\n\t)\nGO\n\n\nSELECT TOP 100 * FROM ext.Patient_identifier\nGO\n\n\n\nIF NOT EXISTS (SELECT * FROM sys.external_file_formats WHERE name = 'SynapseParquetFormat') \n\tCREATE EXTERNAL FILE FORMAT [SynapseParquetFormat] \n\tWITH ( FORMAT_TYPE = PARQUET)\nGO\n\nIF NOT EXISTS (SELECT * FROM sys.external_data_sources WHERE name = 'silver_amheroldhackathonstorage_dfs_core_windows_net') \n\tCREATE EXTERNAL DATA SOURCE [silver_amheroldhackathonstorage_dfs_core_windows_net] \n\tWITH (\n\t\tLOCATION = 'abfss://silver@amheroldhackathonstorage.dfs.core.windows.net' \n\t)\nGO\n\nCREATE EXTERNAL TABLE ext.Patient_extension (\n\t[Patient_id] nvarchar(4000),\n\t[extension_url] nvarchar(4000),\n\t[extension_valueAddress_city] nvarchar(4000),\n\t[extension_valueAddress_country] nvarchar(4000),\n\t[extension_valueAddress_state] nvarchar(4000),\n\t[extension_valueDecimal] float,\n\t[extension_valueString] nvarchar(4000)\n\t)\n\tWITH (\n\tLOCATION = 'Patient_extension/**',\n\tDATA_SOURCE = [silver_amheroldhackathonstorage_dfs_core_windows_net],\n\tFILE_FORMAT = [SynapseParquetFormat]\n\t)\nGO\n\n\nSELECT TOP 100 * FROM ext.Patient_extension\nGO\n\n\nIF NOT EXISTS (SELECT * FROM sys.external_file_formats WHERE name = 'SynapseParquetFormat') \n\tCREATE EXTERNAL FILE FORMAT [SynapseParquetFormat] \n\tWITH ( FORMAT_TYPE = PARQUET)\nGO\n\nIF NOT EXISTS (SELECT * FROM sys.external_data_sources WHERE name = 'silver_amheroldhackathonstorage_dfs_core_windows_net') \n\tCREATE EXTERNAL DATA SOURCE [silver_amheroldhackathonstorage_dfs_core_windows_net] \n\tWITH (\n\t\tLOCATION = 'abfss://silver@amheroldhackathonstorage.dfs.core.windows.net' \n\t)\nGO\n\nCREATE EXTERNAL TABLE ext.Patient_communication (\n\t[Patient_id] nvarchar(4000),\n\t[communication_language_coding_code] nvarchar(4000),\n\t[communication_language_coding_display] nvarchar(4000),\n\t[communication_language_coding_system] nvarchar(4000),\n\t[communication_language_text] nvarchar(4000)\n\t)\n\tWITH (\n\tLOCATION = 'Patient_communication/**',\n\tDATA_SOURCE = [silver_amheroldhackathonstorage_dfs_core_windows_net],\n\tFILE_FORMAT = [SynapseParquetFormat]\n\t)\nGO\n\n\nSELECT TOP 100 * FROM ext.Patient_communication\nGO\n\n\n\nIF NOT EXISTS (SELECT * FROM sys.external_file_formats WHERE name = 'SynapseParquetFormat') \n\tCREATE EXTERNAL FILE FORMAT [SynapseParquetFormat] \n\tWITH ( FORMAT_TYPE = PARQUET)\nGO\n\nIF NOT EXISTS (SELECT * FROM sys.external_data_sources WHERE name = 'silver_amheroldhackathonstorage_dfs_core_windows_net') \n\tCREATE EXTERNAL DATA SOURCE [silver_amheroldhackathonstorage_dfs_core_windows_net] \n\tWITH (\n\t\tLOCATION = 'abfss://silver@amheroldhackathonstorage.dfs.core.windows.net' \n\t)\nGO\n\nCREATE EXTERNAL TABLE ext.Patient_address (\n\t[Patient_id] nvarchar(4000),\n\t[address_line] nvarchar(4000),\n\t[address_city] nvarchar(4000),\n\t[address_country] nvarchar(4000),\n\t[address_postalCode] nvarchar(4000),\n\t[address_state] nvarchar(4000),\n\t[address_extension_url] nvarchar(4000)\n\t)\n\tWITH (\n\tLOCATION = 'Patient_address/**',\n\tDATA_SOURCE = [silver_amheroldhackathonstorage_dfs_core_windows_net],\n\tFILE_FORMAT = [SynapseParquetFormat]\n\t)\nGO\n\n\nSELECT TOP 100 * FROM ext.Patient_address\nGO",
			"metadata": {
				"language": "sql"
			},
			"currentConnection": {
				"databaseName": "fhir_data",
				"poolName": "Built-in"
			},
			"resultLimit": 5000
		},
		"type": "SqlQuery"
	}
}